{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GifServiceService {\n  constructor(http) {\n    this.http = http;\n    this._historial = [];\n    this.apiKey = 'J9EkEQEwk1JedQ7LtzSEFCbQFDIqy9fH';\n  }\n  get historial() {\n    return [...this._historial];\n  }\n  buscarGif(query = '') {\n    query = query.trim().toLocaleLowerCase();\n    if (this._historial.includes(query)) {\n      this._historial.unshift(query);\n      this._historial = this._historial.splice(0.9);\n    }\n  }\n}\nGifServiceService.ɵfac = function GifServiceService_Factory(t) {\n  return new (t || GifServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nGifServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GifServiceService,\n  factory: GifServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,iBAAiB;EAS5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAPhB,eAAU,GAAa,EAAE;IACzB,WAAM,GAAW,kCAAkC;EAMrB;EAJtC,IAAIC,SAAS;IACX,OAAO,CAAC,GAAG,IAAI,CAACC,UAAU,CAAC;EAC7B;EAIAC,SAAS,CAACC,QAAgB,EAAE;IAC1BA,KAAK,GAAGA,KAAK,CAACC,IAAI,EAAE,CAACC,iBAAiB,EAAE;IACxC,IAAI,IAAI,CAACJ,UAAU,CAACK,QAAQ,CAAEH,KAAK,CAAE,EAAE;MACrC,IAAI,CAACF,UAAU,CAACM,OAAO,CAAEJ,KAAK,CAAE;MAChC,IAAI,CAACF,UAAU,GAAG,IAAI,CAACA,UAAU,CAACO,MAAM,CAAC,GAAG,CAAC;;EAGjD;;AAlBWX,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAY,SAAjBZ,iBAAiB;EAAAa,YAFhB;AAAM","names":["GifServiceService","constructor","http","historial","_historial","buscarGif","query","trim","toLocaleLowerCase","includes","unshift","splice","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Gonza\\OneDrive\\Escritorio\\Fernando Herrera\\gifApp\\src\\app\\gifs\\service\\gif.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable, Query } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GifServiceService {\n\n  private _historial: string[] = [];\n  private apiKey: string = 'J9EkEQEwk1JedQ7LtzSEFCbQFDIqy9fH'\n\n  get historial() {\n    return [...this._historial]\n  }\n\n  constructor(private http: HttpClient){}\n\n  buscarGif(query: string = '') {\n    query = query.trim().toLocaleLowerCase()\n    if (this._historial.includes( query )) {\n      this._historial.unshift( query )\n      this._historial = this._historial.splice(0.9)\n    }\n\n  }\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}